==32629== Memcheck, a memory error detector
==32629== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==32629== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==32629== Command: ./ydc
==32629== 
==32629== Invalid read of size 1
==32629==    at 0x404EED: ubigint::divide_by_2() (ubigint.cpp:289)
==32629==    by 0x40521D: udivide(ubigint const&, ubigint) (ubigint.cpp:332)
==32629==    by 0x40534C: ubigint::operator/(ubigint const&) const (ubigint.cpp:338)
==32629==    by 0x409D19: bigint::operator/(bigint const&) const (bigint.cpp:136)
==32629==    by 0x410999: do_arith(iterstack<bigint>&, char) (main.cpp:33)
==32629==    by 0x411390: main (main.cpp:140)
==32629==  Address 0x5a273cf is 1 bytes before a block of size 3 alloc'd
==32629==    at 0x4C2A1E3: operator new(unsigned long) (vg_replace_malloc.c:334)
==32629==    by 0x408DDF: __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (new_allocator.h:111)
==32629==    by 0x408A28: std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (alloc_traits.h:436)
==32629==    by 0x408047: std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long) (stl_vector.h:172)
==32629==    by 0x407363: unsigned char* std::vector<unsigned char, std::allocator<unsigned char> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(unsigned long, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) (stl_vector.h:1260)
==32629==    by 0x4062B4: std::vector<unsigned char, std::allocator<unsigned char> >::operator=(std::vector<unsigned char, std::allocator<unsigned char> > const&) (vector.tcc:206)
==32629==    by 0x404DC8: ubigint::multiply_by_2() (ubigint.cpp:271)
==32629==    by 0x405144: udivide(ubigint const&, ubigint) (ubigint.cpp:324)
==32629==    by 0x40534C: ubigint::operator/(ubigint const&) const (ubigint.cpp:338)
==32629==    by 0x409D19: bigint::operator/(bigint const&) const (bigint.cpp:136)
==32629==    by 0x410999: do_arith(iterstack<bigint>&, char) (main.cpp:33)
==32629==    by 0x411390: main (main.cpp:140)
==32629== 
==32629== 
==32629== HEAP SUMMARY:
==32629==     in use at exit: 0 bytes in 0 blocks
==32629==   total heap usage: 350 allocs, 350 frees, 7,332 bytes allocated
==32629== 
==32629== All heap blocks were freed -- no leaks are possible
==32629== 
==32629== For counts of detected and suppressed errors, rerun with: -v
==32629== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
